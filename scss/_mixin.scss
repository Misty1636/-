@mixin media-breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin make-row($gutter: $gutter-width) {
  display: flex;
  flex-wrap: wrap;
  margin-left: -($gutter/2);
  margin-right: -($gutter/2);
}

@mixin make-col($size, $cols: $grid-columns) {
  flex: 0 0 percentage($size / $cols);
  max-width: percentage($size / $cols);
}

@mixin make-grid-col($cols: $grid-columns, $gutter: $gutter-width, $breakpoints: $grid-breakpoints) {
  %col {
    position: relative;
    width: 100%;
    padding-left: $gutter/2;
    padding-right: $gutter/2;
  }

  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @for $i from 1 through $cols {
      .col#{$infix}-#{$i} {
        @extend %col;
      }
    }
    .col#{$infix},
    .col#{$infix}-auto {
      @extend %col;
    }

    @include media-breakpoint-min($breakpoint, $breakpoints) {
      .col#{$infix} {
        flex-basis: 0;
        flex-grow: 1;
        max-width: 100%;
      }

      .col#{$infix}-auto {
        flex: 0 0 auto;
        width: auto;
        max-width: 100%;
      }

      @for $i from 1 through $cols {
        .col#{$infix}-#{$i} {
          @include make-col($i, $cols);
        }
      }
    }
  }
}

@mixin make-container($gutter: $gutter-width) {
  width: 100%;
  padding-right: $gutter/2;
  padding-left: $gutter/2;
  margin-right: auto;
  margin-left: auto;
}

@mixin make-container-max-width($max-width: $container-max-width, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $container-width in $max-width {
    @include media-breakpoint-min($breakpoint, $breakpoints) {
      max-width: $container-width;
    }
  }
}
